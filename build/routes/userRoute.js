"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const router = express_1.default.Router();
const authController_1 = require("../controller/authController");
const commentController_1 = require("../controller/commentController");
const conversationController_1 = require("../controller/conversationController");
const messageContoller_1 = require("../controller/messageContoller");
const postController_1 = require("../controller/postController");
const userController_1 = require("../controller/userController");
const authMiddeleware = require('../middleware/authMiddleware');
router.post('/register', authController_1.registerUser);
router.post('/login', authController_1.loginUser);
router.put('/verify', authController_1.verifyAccount);
router.post('/post', authMiddeleware, postController_1.createPost);
router.get('/get-all-posts', authMiddeleware, postController_1.getPost);
router.get('/get-user-profile/:id', authMiddeleware, userController_1.getUserProfile);
router.put('/like-post/:postId', authMiddeleware, postController_1.likePost);
router.post('/post-comment/:postId', authMiddeleware, commentController_1.postComment);
router.get('/all-comments/:postId', authMiddeleware, commentController_1.getAllPosts);
router.put('/update-user-profile', authMiddeleware, userController_1.updateUserProfile);
router.put('/follow-user', authMiddeleware, userController_1.followUser);
router.get('/get-all-request', authMiddeleware, userController_1.getAllRequest);
router.put('/accept-request', authMiddeleware, userController_1.acceptRequest);
router.delete('/delete-request/:deleteId', authMiddeleware, userController_1.deleteRequest);
router.get('/get-all-followers/:userId', authMiddeleware, userController_1.getAllFollowers);
router.get('/get-all-following/:userId', authMiddeleware, userController_1.getAllFollowing);
router.put('/save-post', authMiddeleware, postController_1.savePost);
router.get('/all-save-post', authMiddeleware, postController_1.getAllSAvedPost);
router.post('/new-conversation', authMiddeleware, conversationController_1.postNewConversation);
router.get('/get-conversation/:userId', authMiddeleware, conversationController_1.getConversation);
router.post('/add-message', authMiddeleware, messageContoller_1.addMessage);
router.get('/get-message/:conversationId', authMiddeleware, messageContoller_1.getMessage);
router.get('/get-chat-user/:friendId', authMiddeleware, userController_1.getChatUser);
router.post('/post-reply-comment/:commentId', authMiddeleware, commentController_1.postCommentReply);
router.get('/all-comment-replies/:commentId', authMiddeleware, commentController_1.getAllCommentReply);
router.put('/like-comment/:commentId', authMiddeleware, commentController_1.likeComment);
router.delete('/delete-post/:postId', authMiddeleware, postController_1.deletePost);
router.put('/edit-post', authMiddeleware, postController_1.editPost);
router.post('/report-post', authMiddeleware, postController_1.reportPost);
router.post('/shorts', authMiddeleware, postController_1.createShorts);
router.get('/get-all-shorts', authMiddeleware, postController_1.getShorts);
router.post('/search-users', authMiddeleware, userController_1.searchUserList);
router.put('/set-private-account', authMiddeleware, userController_1.setPrivateAccount);
router.get('/get-all-notifications', authMiddeleware, userController_1.getAllNotification);
router.get('/suggestion-users', authMiddeleware, userController_1.suggestionUsers);
module.exports = router;
